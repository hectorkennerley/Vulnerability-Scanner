from models import scan, parsedIpConfig, bannerToCpe
import json
numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]

def handleScan(presetIndex=None):
    if presetIndex is None:
        getOS = True
        bannersAndInfo = scan([20, 21, 22, 53, 80, 110, 123, 143, 443, 514, 3389], chooseInterfaces())
    else:
        presets = loadPresets()
        # presetIndex should be less the number of presets since indexing starts at 0.
        # presetIndex also shouldn't be negative
        if presetIndex < len(presets) and presetIndex >= 0:
            preset = presets[presetIndex]
            ports = preset["ports"]
            getOS = preset["getOS"]
            bannersAndInfo = scan(ports, chooseInterfaces())


def createPreset(presetInfo):
    # presetInfo = [name, ports, getOS]
    dict = {
        "name": presetInfo[0],
        "ports": presetInfo[1],
        "getOS": presetInfo[2]
    }
    presets = loadPresets()
    presets.append(dict)
    with open("presets.json", "w") as file:
        json.dump(presets, file)

def deletePreset(presetIndex : int):
    presets = loadPresets()
    del presets[presetIndex]
    # write the presets back to the file without the deleted item
    with open("presets.json", "w") as file:
        json.dump(presets, file)

def loadPresets() -> list:
    # load presets from file
    with open('presets.json', 'r') as file:
        presets = json.load(file)
    return presets

def chooseInterfaces():
    # return: list of strings

    interfaces = []
    possibleInterfaces = []

    # get data on network interfaces
    netDetails = parsedIpConfig()

    print("Please enter all of the interface numbers separated by commas you would like to scan, e.g. 1, 2, 5. If none are entered, all will be scanned.")

    # print out user interfaces
    for i in range(len(netDetails)):
        print(str(i + 1) + ". " + netDetails[i][0])
        possibleInterfaces.append(netDetails[i][0])

    # get user choice and interpret it
    interfaceChoice = input(">")
    chosen = interfaceChoice.split(",")
    for strI in chosen:
        strI = strI.strip()
        if strI in numbers:
            # converts the input into index
            strI = int(strI) - 1
            # add user choice to a list
            interfaces.append(netDetails[strI][0])
    return interfaces

def scanOutput(scanResults):
    if scanResults != []:
        for result in scanResults:
            print(result)
    else:
        print("No scan results")
