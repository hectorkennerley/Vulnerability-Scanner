from models import scan, parsedIpConfig, bannerToCpe
numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]

def handleScan(presetID=None):
    if presetID is None:
        ports = [20, 21, 22, 53, 80, 110, 123, 143, 443, 514, 3389]
    else:
        ports = _getPreset(presetID)[2]
    scanResults = scan(ports, chooseInterfaces())
    cpeList = []
    for bannerAndInfo in scanResults:
        cpeList.append(bannerToCpe(bannerAndInfo))



def _getPreset(presetID):
    # return: [ID, Name, ports]
    return []

def createScan():
    pass

def loadPresets():
    # load presets from file
    # return [[ID, Name], ...] where ID and Name are strings
    with open("presets.txt", "w+") as presets:
        pass
    return []

def chooseInterfaces():
    # return: list of strings

    interfaces = []
    possibleInterfaces = []

    # get data on network interfaces
    netDetails = parsedIpConfig()

    print("Please enter all of the interface numbers separated by commas you would like to scan, e.g. 1, 2, 5. If none are entered, all will be scanned.")

    # print out user interfaces
    for i in range(len(netDetails)):
        print(str(i + 1) + ". " + netDetails[i][0])
        possibleInterfaces.append(netDetails[i][0])

    # get user choice and interpret it
    interfaceChoice = input(">")
    chosen = interfaceChoice.split(",")
    for strI in chosen:
        strI = strI.strip()
        if strI in numbers:
            # converts the input into index
            strI = int(strI) - 1
            # add user choice to a list
            interfaces.append(netDetails[strI][0])
    return interfaces

def scanOutput(scanResults):
    if scanResults != []:
        for result in scanResults:
            print(result)
    else:
        print("No scan results")
