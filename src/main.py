#V0.1.0
import nvdlib
import socket
import json
import re

class scan:
    def __init__(self, name) -> None:
        self.name = name # type: str
        self.cves = []
    
    def run():
        pass

class cpe:
    def __init__(self) -> None:
        self.cpe = None
        self.cves = []
    
    def cpeFromBanner(self, banner):
        self.cpe = None


class cve:
    def __init__(self) -> None:
        self.cvss = 0 # type: float 
        self.cvssVector = ""
        self.description = "" # type: str
        self.cweID = 0 # type: int
        self.cweDescription = "" # type: str
    
    def __deriveCvss(self, cvssVector):
        # using the cvss vector, calculate the cvss
        return None


def menu():
    choosing = True
    while choosing:
        scanChoice = input("Options:\n1. Full scan\n2. Preset scan\n3. Custom scan\n>").lower().strip()
        if scanChoice == "full scan" or scanChoice == "1":
            fullScan()
        elif scanChoice == "preset scan" or scanChoice == "2":
            presetScan()
        elif scanChoice == "custom scan" or scanChoice == "3":
            customScan()
        elif scanChoice == "exit" or scanChoice == "quit":
            choosing = False
        else:
            print("Please enter valid option\n")

def fullScan():
    pass

def presetScan():
    # load presets from files
    presetList = []
    with open("presets.txt", "w+") as presets:
        pass
    # allow user to choose using numbers or name
    for preset in presetList:
        pass
    pass 

def customScan():
    pass

def bannerToCpe(banner):
    # create dictionary of regex and cpe from json file
    bannerToCpeFile = open('regexBannerToCpe.json', 'r+') 
    bannerToCpeDict = json.load(bannerToCpeFile)
    bannerToCpeFile.close()

    # check every regex expression against the banner
    for product in bannerToCpeDict:
        regex = bannerToCpeDict[product]["regex"]
        if re.search(regex, banner) != None:
            return bannerToCpeDict[product]["alias"]
    return None

menu()
